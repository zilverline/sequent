# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://github.com/rubocop-hq/rubocop/blob/master/manual/configuration.md

AllCops:
  TargetRubyVersion: 3.2
  SuggestExtensions:
    rubocop-rake: false
    rubocop-rspec: false
  NewCops: enable
  Exclude:
    # default
    - '**/node_modules/**/*'
    - '**/vendor/**/*'
    - '**/.git/**/*'
    # sequent
    - 'db/sequent_schema.rb'
    - 'docs/**/*'
    - 'integration-specs/rails-app/bin/*'
    - 'integration-specs/rails-app/config/puma.rb'
    - 'integration-specs/rails-app/db/*'
##
# General styles
##
Style/Documentation:
  Enabled: false # Code should be self-documenting

Style/AsciiComments:
  Enabled: false # We have no issues with non-ascii characters in comments

Style/StructInheritance:
  Enabled: false # We don't want this because Rubymine doesn't understand the 'correct' way.

Style/GuardClause:
  Enabled: false # Can lead to strange constructions

Style/EachWithObject:
  Enabled: false # We prefer/are used to using reduce

Style/NumericPredicate:
  Enabled: false # Using .zero? can lead to 'Undefined method x for nil'

Style/MultilineBlockChain:
  Enabled: false # Acceptable

Style/DoubleNegation:
  Enabled: false # Usable 'hack'

Style/Lambda:
  EnforcedStyle: literal

Style/SignalException:
  EnforcedStyle: semantic

Style/FormatStringToken:
  EnforcedStyle: unannotated

Layout/LineLength:
  Enabled: true
  Max: 120
  AutoCorrect: true

Gemspec/AddRuntimeDependency:
  Enabled: true
Gemspec/RequiredRubyVersion:
  Enabled: true

##
# Metrics (all disabled; we have our own opinion on this)
##
Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

##
# Trailing comma's
##
Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

##
# Naming things
##
Naming/AccessorMethodName:
  Enabled: false # We have our own opinion on this

Naming/PredicateMethod:
  Enabled: false # We have our own opinion on this

Naming/VariableNumber:
  Enabled: false # We have our own opinion on this

Naming/HeredocDelimiterNaming:
  Enabled: false # We have our own opinion on this

Naming/MethodParameterName:
  AllowedNames:
    # defaults
    - io
    - id
    - to
    - by
    - 'on'
    - in
    - at
    - ip
    - db
    - e

##
# Lint
##
Lint/DuplicateSetElement:
  Enabled: true

Lint/ItWithoutArgumentsInBlock:
  Enabled: true

Lint/LiteralAssignmentInCondition:
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: false # TODO enable

Lint/UselessNumericOperation:
  Enabled: true

Lint/SuppressedException:
  AllowComments: true

Lint/AmbiguousBlockAssociation:
  Enabled: true
  Exclude:
    - '**/spec/**/*'

Lint/ConstantDefinitionInBlock:
  Enabled: true
  Exclude:
    - '**/spec/**/*'
    - '**/tasks/**/*rake'

Lint/RaiseException:
  Enabled: true
  Exclude:
    - '**/spec/**/*'

##
# Layout
##
Layout/ExtraSpacing:
  Enabled: true
  AllowForAlignment: false

Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space

##
# Multi-line formatting (hashes)
##
Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/FirstHashElementIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/MultilineHashBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

##
# Multi-line formatting (array)
##
Layout/FirstArrayElementLineBreak:
  Enabled: true

Layout/FirstArrayElementIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/MultilineArrayBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineArrayLineBreaks:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: false
##
# Multi-line formatting (methods/arguments)
##
Layout/FirstMethodArgumentLineBreak:
  Enabled: true

Layout/FirstArgumentIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/FirstParameterIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/MultilineMethodCallBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineMethodArgumentLineBreaks:
  Enabled: true

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented

Layout/BlockAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_block


Style/MapIntoArray:
  Enabled: true

Style/RedundantInterpolationUnfreeze:
  Enabled: true

Style/SendWithLiteralMethodName:
  Enabled: true

Style/SingleLineDoEndBlock:
  Enabled: true

Style/SuperArguments:
  Enabled: true

Style/SuperWithArgsParentheses:
  Enabled: true

Style/HashTransformKeys:
  Enabled: false

Style/OptionalBooleanParameter:
  Enabled: false

Style/SlicingWithRange:
  Enabled: false

Style/CombinableLoops:
  Enabled: false

Style/CaseLikeIf:
  Enabled: false

Style/GlobalStdStream:
  Enabled: false

Layout/EmptyLineBetweenDefs:
  Enabled: false

Layout/EmptyLinesAfterModuleInclusion:
  Enabled: true

Style/SingleArgumentDig:
  Enabled: false

Style/RedundantRegexpEscape:
  Enabled: false

Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: false

Style/SoleNestedConditional:
  Enabled: false

Style/EvalWithLocation:
  Enabled: false
Lint/EmptyBlock: # (new in 1.1)
  Enabled: false
Lint/EmptyClass: # (new in 1.3)
  Enabled: false
Lint/SymbolConversion: # (new in 1.9)
  Enabled: false
Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: false
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: false
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: false
Style/ClassVars:
  Enabled: false
Gemspec/DevelopmentDependencies: # new in 1.44
  Enabled: false
Naming/BlockForwarding: # new in 1.24
  Enabled: false
Security/CompoundHash: # new in 1.28
  Enabled: false
Style/FetchEnvVar: # new in 1.28
  Enabled: false
Style/ObjectThen: # new in 1.28
  Enabled: false
Style/SafeNavigationChainLength:
  Enabled: false
Style/CollectionQuerying:
  Enabled: true
Lint/AmbiguousRange:
  Enabled: true
